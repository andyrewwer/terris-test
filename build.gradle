import java.time.Duration

buildscript {
	ext {
		springBootVersion = '1.5.18.RELEASE'
	}
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"

	}
}

plugins {
	id "com.moowork.node" version "1.2.0"
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
group = 'com.deus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

node {
	version = '9.4.0'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true

	workDir = file('build/nodejs/')
	nodeModulesDir = file('frontend/')
}

ext.generatedSourceDir = file("frontend/dist")

sourceSets {
	main {
		resources {
			srcDirs += [generatedSourceDir]
		}
	}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task npmBuild(type: NpmTask,
		group: 'frontend',
		description: 'Builds the frontend assets and puts them in the main application resource directory',
		dependsOn: ['npmInstall', 'npmLint']) {
	args = ['run', 'build', '--silent']
}

task npmWatch(type: NpmTask,
		group: 'frontend',
		description: 'Build and watches the client side assets for rebuilding') {
	args = ['run', 'buildWatch']
}

task npmWatchIntellij(type: NpmTask,
		group: 'frontend',
		description: 'Build and watches the client side assets for rebuilding') {
	args = ['run', 'buildWatch', '--', '--op=../out/production/resources/static/']
}

task npmLint(type: NpmTask,
		group: 'frontend',
		description: 'Runs linter on the frontend sources.',
		dependsOn: ['npmInstall']) {
	args = ['run', 'lint']
}

task npmTest(type: NpmTask,
		group: 'frontend',
		description: 'Runs frontend unit tests.',
		dependsOn: ['npmInstall', 'npmLint']) {
	args = ['run', 'test', '--silent']
}

compileJava.dependsOn(processResources)
processResources.dependsOn(tasks.npmBuild)
test.dependsOn(['npmTest'])